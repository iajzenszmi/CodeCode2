ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/vectorize-vecmatmult/src$ cd ~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra$ ls
optimize-integral  third-party-programs.txt  vectorize-vecmatmult
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra$ cd optimize-integral
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ ls
a.out      int_sin      Makefile                          README.md
int_cos    int_sin.o    matmul                            sample.json
int_cos.o  License.txt  optimize_integralf90run.txt.save  src
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ make clean
/bin/rm -f core.* matmul.o matmul
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ /opt/intel/oneapi/source setvars.sh
bash: /opt/intel/oneapi/source: No such file or directory
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ /opt/intel/oneapi/setvars.sh
 
:: ERROR: Incorrect usage: this script must be sourced.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ source /opt/intel/oneapi/setvars.sh
 
:: initializing oneAPI environment ...
   bash: BASH_VERSION = 5.1.16(1)-release
   args: Using "$@" for setvars.sh arguments: 
:: compiler -- latest
:: debugger -- latest
:: dpcpp-ct -- latest
:: mpi -- latest
:: oneAPI environment initialized ::
 
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ make
ifort -O0  src/matmul.f90 -c
cc   matmul.o   -o matmul
/usr/bin/ld: matmul.o: relocation R_X86_64_32 against `.rodata' can not be used when making a PIE object; recompile with -fPIE
/usr/bin/ld: failed to set dynamic section sizes: bad value
collect2: error: ld returned 1 exit status
make: *** [<builtin>: matmul] Error 1
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ ls
a.out      int_sin      Makefile                          README.md
int_cos    int_sin.o    matmul.o                          sample.json
int_cos.o  License.txt  optimize_integralf90run.txt.save  src
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ nano Makefile
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ make
make: Nothing to be done for 'all'.
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ ls
a.out      int_sin      Makefile                          README.md
int_cos    int_sin.o    matmul.o                          sample.json
int_cos.o  License.txt  optimize_integralf90run.txt.save  src
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ make clean
/bin/rm -f core.* int_cos.o matmul
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ make 
ifort -O0  src/int_cos.f90 -c
ifort int_cos.o -o int_cos
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ ./int_cos
  
    Number of    | Computed Integral |
 Interior Points |                   |
--------------------------------------
             4   |   3.1415927E+00   |
--------------------------------------
             8   |   3.7922378E+00   |
--------------------------------------
            16   |   3.9484632E+00   |
--------------------------------------
            32   |   3.9871407E+00   |
--------------------------------------
            64   |   3.9967867E+00   |
--------------------------------------
           128   |   3.9991968E+00   |
--------------------------------------
           256   |   3.9997992E+00   |
--------------------------------------
           512   |   3.9999498E+00   |
--------------------------------------
          1024   |   3.9999875E+00   |
--------------------------------------
          2048   |   3.9999969E+00   |
--------------------------------------
          4096   |   3.9999992E+00   |
--------------------------------------
          8192   |   3.9999998E+00   |
--------------------------------------
         16384   |   4.0000000E+00   |
--------------------------------------
         32768   |   4.0000000E+00   |
--------------------------------------
         65536   |   4.0000000E+00   |
--------------------------------------
        131072   |   4.0000000E+00   |
--------------------------------------
        262144   |   4.0000000E+00   |
--------------------------------------
        524288   |   4.0000000E+00   |
--------------------------------------
       1048576   |   4.0000000E+00   |
--------------------------------------
       2097152   |   4.0000000E+00   |
--------------------------------------
       4194304   |   4.0000000E+00   |
--------------------------------------
       8388608   |   4.0000000E+00   |
--------------------------------------
      16777216   |   4.0000000E+00   |
--------------------------------------
      33554432   |   4.0000000E+00   |
--------------------------------------
      67108864   |   4.0000000E+00   |
--------------------------------------
  
 CPU Time =    5.121742      seconds
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral$ cd src
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral/src$ ls
int_cos.f90  int_sin.f90  matmul.f90
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral/src$ cat int_cos.f90
 ! ==============================================================
 ! Copyright Â© 2020 Intel Corporation
 !
 ! SPDX-License-Identifier: MIT
 ! =============================================================
 !
 ! [DESCRIPTION]
 ! This program computes the integral (area under the curve) of a user-supplied
 ! function over an interval in a stepwise fashion. The interval is split into 
 ! segments, and at each segment position the area of a rectangle is computed 
 ! whose height is the value of sine at that point and the width is the segment
 ! width.  The areas of the rectangles are then summed.
 !
 ! The process is repeated with smaller and smaller width rectangles, more 
 ! closely approximating the true value.
 !
 ! The source for this program also demonstrates recommended Fortran
 ! coding practices.
 !
 ! Compile the sample several times using different optimization options.
 !
 ! Read the Intel(R) Fortran Compiler Documentation for more information about these options.
 ! 
 ! Some of these automatic optimizations use features and options
 ! that can restrict program execution to specific architectures. 
 ! 
 ! [COMPILE] 
 ! Use the one of the following compiler options: 
 !
 ! Windows*: /O1, /O2, /O3
 !
 ! Linux* and macOS*: -O1, -O2, -O3
 !

program int_cos
implicit none

! Create a value DP that is the "kind" number of a double precision value
! We will use this value in our declarations and constants.
integer, parameter :: DP = kind(0.0D0)

! Declare a named constant for pi, specifying the kind type
real(DP), parameter :: pi = 3.141592653589793238_DP 

! Declare interval begin and end
real(DP), parameter :: interval_begin = 0.0_DP
real(DP), parameter :: interval_end   = 2.0_DP * pi

real(DP) :: step, sum, x_i
integer :: N, i, j
real clock_start, clock_finish

write (*,'(A)') "  "
write (*,'(A)') "    Number of    | Computed Integral |"
write (*,'(A)') " Interior Points |                   |"
call cpu_time (clock_start)

do j=2,26
  write (*,'(A)') "--------------------------------------"
  N = 2**j
  ! Compute stepsize for N-1 internal rectangles 
  step = (interval_end - interval_begin) / real(N,DP);
  
  ! Approximate 1/2 area in first rectangle: f(x0) * (step/2) 
  sum = INTEG_FUNC(interval_begin) * (step / 2.0_DP)
  
  do i=1,N-1
    x_i = real(i,DP) * step
    ! Apply midpoint rule:
    ! Given length = f(x), compute the area of the
    ! rectangle of width step
    sum = sum + (INTEG_FUNC(x_i) * step)
    end do
    
  ! Add approximate area in last rectangle for f(xN) * (step/2) 
  sum = sum + (INTEG_FUNC(interval_end) * (step / 2.0_DP))
  
  write (*,'(T5,I10,T18,"|",2X,1P,E14.7,T38,"|")') N, sum
  end do

call cpu_time(clock_finish)
write (*,'(A)') "--------------------------------------"
write (*,'(A)') "  "
write (*,*) "CPU Time = ",(clock_finish - clock_start), " seconds"

contains

! Function to integrate
real(DP) function INTEG_FUNC (x)
  real(DP), intent(IN) :: x

  INTEG_FUNC = abs(cos(x))
  return
end function INTEG_FUNC

end program int_cos
ian@ian-Latitude-3190-2-in-1:~/oneapi/oneAPI-samples-master/DirectProgramming/Fortran/DenseLinearAlgebra/optimize-integral/src$ 
